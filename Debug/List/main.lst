###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        01/Jul/2017  12:54:34
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\application\main.c
#    Command line =  
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\application\main.c -D MPGL1
#        -D MPG1 --preprocess=cl
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\Debug\List\ -lC
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\Debug\List\ -o
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        D:\EIE\Software\arm\INC\c\DLib_Config_Normal.h -I
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\ -I
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\..\bsp\ -I
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\..\drivers\ -I
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\..\application\ -I
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\
#        -I
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\application\
#        -I
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\cmsis\
#        -I
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\drivers\
#        -On --use_c++_inline --require_prototypes -I
#        D:\EIE\Software\arm\CMSIS\Include\
#    List file    =  
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\Debug\List\main.lst
#    Object file  =  
#        D:\EIE\Razor_Atmel-master\firmware_mpgl1\iar_7_20_1\Debug\Obj\main.o
#
###############################################################################

D:\EIE\Razor_Atmel-master\firmware_mpgl1\application\main.c
      1          /***********************************************************************************************************************
      2          File: main.c                                                                
      3          
      4          Description:
      5          Container for the EiE firmware.  
      6          ***********************************************************************************************************************/
      7          
      8          #include "configuration.h"
      9          
     10          /***********************************************************************************************************************
     11          Global variable definitions with scope across entire project.
     12          All Global variable names shall start with "G_"
     13          ***********************************************************************************************************************/
     14          /* New variables */

   \                                 In section .bss, align 4
     15          volatile u32 G_u32SystemFlags = 0;                     /* Global system flags */
   \                     G_u32SystemFlags:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     16          volatile u32 G_u32ApplicationFlags = 0;                /* Global applications flags: set when application is successfully initialized */
   \                     G_u32ApplicationFlags:
   \   00000000                      DS8 4
     17          
     18          /*--------------------------------------------------------------------------------------------------------------------*/
     19          /* External global variables defined in other files (must indicate which file they are defined in) */
     20          extern volatile u32 G_u32SystemTime1ms;                /* From board-specific source file */
     21          extern volatile u32 G_u32SystemTime1s;                 /* From board-specific source file */
     22          
     23          
     24          /***********************************************************************************************************************
     25          Global variable definitions with scope limited to this local application.
     26          Variable names shall start with "Main_" and be declared as static.
     27          ***********************************************************************************************************************/
     28          
     29          
     30          /***********************************************************************************************************************
     31          Main Program
     32          Main has two sections:
     33          
     34          1. Initialization which is run once on power-up or reset.  All drivers and applications are setup here without timing
     35          contraints but must complete execution regardless of success or failure of starting the application. 
     36          
     37          2. Super loop which runs infinitely giving processor time to each application.  The total loop time should not exceed
     38          1ms of execution time counting all application execution.  SystemSleep() will execute to complete the remaining time in
     39          the 1ms period.
     40          ***********************************************************************************************************************/
     41          

   \                                 In section .text, align 4, keep-with-next
     42          void main(void)
     43          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     44            G_u32SystemFlags |= _SYSTEM_INITIALIZING;
   \   00000002   0x482F             LDR.N    R0,??main_0
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   0000000A   0x492D             LDR.N    R1,??main_0
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     45          
     46            /* Low level initialization */
     47            WatchDogSetup(); /* During development, does not reset processor if timeout */
   \   0000000E   0x.... 0x....      BL       WatchDogSetup
     48            GpioSetup();
   \   00000012   0x.... 0x....      BL       GpioSetup
     49            ClockSetup();
   \   00000016   0x.... 0x....      BL       ClockSetup
     50            InterruptSetup();
   \   0000001A   0x.... 0x....      BL       InterruptSetup
     51            SysTickSetup();
   \   0000001E   0x.... 0x....      BL       SysTickSetup
     52          
     53            /* Driver initialization */
     54            MessagingInitialize();
   \   00000022   0x.... 0x....      BL       MessagingInitialize
     55            UartInitialize();
   \   00000026   0x.... 0x....      BL       UartInitialize
     56            DebugInitialize();
   \   0000002A   0x.... 0x....      BL       DebugInitialize
     57          
     58            /* Debug messages through DebugPrintf() are available from here */
     59          
     60            TimerInitialize();  
   \   0000002E   0x.... 0x....      BL       TimerInitialize
     61            SspInitialize();
   \   00000032   0x.... 0x....      BL       SspInitialize
     62            TWIInitialize();
   \   00000036   0x.... 0x....      BL       TWIInitialize
     63          
     64            LcdInitialize();
   \   0000003A   0x.... 0x....      BL       LcdInitialize
     65            LedInitialize();
   \   0000003E   0x.... 0x....      BL       LedInitialize
     66            ButtonInitialize();
   \   00000042   0x.... 0x....      BL       ButtonInitialize
     67            AntInitialize();
   \   00000046   0x.... 0x....      BL       AntInitialize
     68            SdCardInitialize();
   \   0000004A   0x.... 0x....      BL       SdCardInitialize
     69          
     70            /* Application initialization */
     71            UserApp1Initialize();
   \   0000004E   0x.... 0x....      BL       UserApp1Initialize
     72            UserApp2Initialize();
   \   00000052   0x.... 0x....      BL       UserApp2Initialize
     73            UserApp3Initialize();
   \   00000056   0x.... 0x....      BL       UserApp3Initialize
     74            
     75            /* Exit initialization */
     76            SystemStatusReport();
   \   0000005A   0x.... 0x....      BL       SystemStatusReport
     77            G_u32SystemFlags &= ~_SYSTEM_INITIALIZING;
   \   0000005E   0x4818             LDR.N    R0,??main_0
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x0040             LSLS     R0,R0,#+1        ;; ZeroExtS R0,R0,#+1,#+1
   \   00000064   0x0840             LSRS     R0,R0,#+1
   \   00000066   0x4916             LDR.N    R1,??main_0
   \   00000068   0x6008             STR      R0,[R1, #+0]
     78              
     79            /* Super loop */  
     80            while(1)
     81            {
     82              WATCHDOG_BONE();
   \                     ??main_1: (+1)
   \   0000006A   0x4816             LDR.N    R0,??main_0+0x4  ;; 0xa5000001
   \   0000006C   0x4916             LDR.N    R1,??main_0+0x8  ;; 0x400e1250
   \   0000006E   0x6008             STR      R0,[R1, #+0]
     83              
     84              /* Drivers */
     85              LedUpdate();
   \   00000070   0x.... 0x....      BL       LedUpdate
     86              ButtonRunActiveState();
   \   00000074   0x.... 0x....      BL       ButtonRunActiveState
     87              UartRunActiveState();
   \   00000078   0x.... 0x....      BL       UartRunActiveState
     88              TimerRunActiveState(); 
   \   0000007C   0x.... 0x....      BL       TimerRunActiveState
     89              SspRunActiveState();
   \   00000080   0x.... 0x....      BL       SspRunActiveState
     90              TWIRunActiveState();
   \   00000084   0x.... 0x....      BL       TWIRunActiveState
     91              MessagingRunActiveState();
   \   00000088   0x.... 0x....      BL       MessagingRunActiveState
     92              DebugRunActiveState();
   \   0000008C   0x.... 0x....      BL       DebugRunActiveState
     93              LcdRunActiveState();
   \   00000090   0x.... 0x....      BL       LcdRunActiveState
     94              AntRunActiveState();
   \   00000094   0x.... 0x....      BL       AntRunActiveState
     95              SdCardRunActiveState();
   \   00000098   0x.... 0x....      BL       SdCardRunActiveState
     96          
     97              /* Applications */
     98              UserApp1RunActiveState();
   \   0000009C   0x.... 0x....      BL       UserApp1RunActiveState
     99              UserApp2RunActiveState();
   \   000000A0   0x.... 0x....      BL       UserApp2RunActiveState
    100              UserApp3RunActiveState();
   \   000000A4   0x.... 0x....      BL       UserApp3RunActiveState
    101              
    102              /* System sleep*/
    103              HEARTBEAT_OFF();
   \   000000A8   0xF05F 0x4000      MOVS     R0,#-2147483648
   \   000000AC   0x4907             LDR.N    R1,??main_0+0xC  ;; 0x400e0c30
   \   000000AE   0x6008             STR      R0,[R1, #+0]
    104              SystemSleep();
   \   000000B0   0x.... 0x....      BL       SystemSleep
    105              HEARTBEAT_ON();
   \   000000B4   0xF05F 0x4000      MOVS     R0,#-2147483648
   \   000000B8   0x4905             LDR.N    R1,??main_0+0x10  ;; 0x400e0c34
   \   000000BA   0x6008             STR      R0,[R1, #+0]
   \   000000BC   0xE7D5             B.N      ??main_1
   \   000000BE   0xBF00             Nop      
   \                     ??main_0:
   \   000000C0   0x........         DC32     G_u32SystemFlags
   \   000000C4   0xA5000001         DC32     0xa5000001
   \   000000C8   0x400E1250         DC32     0x400e1250
   \   000000CC   0x400E0C30         DC32     0x400e0c30
   \   000000D0   0x400E0C34         DC32     0x400e0c34
    106              
    107            } /* end while(1) main super loop */
    108            
    109          } /* end main() */
    110          
    111          
    112          /*--------------------------------------------------------------------------------------------------------------------*/
    113          /* End of File */
    114          /*--------------------------------------------------------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   main
         8   -> AntInitialize
         8   -> AntRunActiveState
         8   -> ButtonInitialize
         8   -> ButtonRunActiveState
         8   -> ClockSetup
         8   -> DebugInitialize
         8   -> DebugRunActiveState
         8   -> GpioSetup
         8   -> InterruptSetup
         8   -> LcdInitialize
         8   -> LcdRunActiveState
         8   -> LedInitialize
         8   -> LedUpdate
         8   -> MessagingInitialize
         8   -> MessagingRunActiveState
         8   -> SdCardInitialize
         8   -> SdCardRunActiveState
         8   -> SspInitialize
         8   -> SspRunActiveState
         8   -> SysTickSetup
         8   -> SystemSleep
         8   -> SystemStatusReport
         8   -> TWIInitialize
         8   -> TWIRunActiveState
         8   -> TimerInitialize
         8   -> TimerRunActiveState
         8   -> UartInitialize
         8   -> UartRunActiveState
         8   -> UserApp1Initialize
         8   -> UserApp1RunActiveState
         8   -> UserApp2Initialize
         8   -> UserApp2RunActiveState
         8   -> UserApp3Initialize
         8   -> UserApp3RunActiveState
         8   -> WatchDogSetup


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  G_u32ApplicationFlags
       4  G_u32SystemFlags
     212  main

 
   8 bytes in section .bss
 212 bytes in section .text
 
 212 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
